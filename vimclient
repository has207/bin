#!/bin/bash
#
# Usage: vimclient FILENAME
#
# Find a vim pane in the current tmux window and tell it to edit the given file.
# If there is no pane running vim in the current window just open up vim.

# make sure we're inside a tmux session
if [ x"$TMUX_PANE" = x ]; then
  vi -X "$1"
  exit $?
fi

while read line; do
  PANE=$(echo "$line" | awk '{print $2}')
  TTY=$(echo "$line" | awk '{print $3}' | cut -c 6-)
  if ps c -o 'stat=,command=' -t "${TTY}" 2>/dev/null | egrep -q '\+.*\bvim?\b'; then
    VIM_PANE=$PANE
    break;
  fi
done < <( tmux lsp -s -F '#{window_active} #{pane_id} #{pane_tty}' |grep ^1 )

if [ ! -z $VIM_PANE ]; then
  if [ x"$1" != x ]; then
    # add shell escapes
    FILENAME=$(echo $1 | sed 's/\ /\\ /g')
    DIRECTORY=$(echo $PWD |sed 's/\ /\\ /g')
    if [ x"$(echo $1 | cut -c 1)" != x"/" ]; then
      FILENAME=$DIRECTORY/$FILENAME
    fi
    tmux send -t "$VIM_PANE" C-w l Escape ":sp $FILENAME" C-m;
  fi;
  tmux select-pane -t "$VIM_PANE"
  # if there is no file then just jump to vim
  # otherwise assume the process that spawned this cares about the contents having
  # been updated before we return, so wait until editing is done.
  if [ ! -z $FILENAME ]; then
    echo "[hit ENTER when ready]"
    read
    sleep 1  # give vim a chance to save the file
  fi
else
  vi -X "$1"
fi
